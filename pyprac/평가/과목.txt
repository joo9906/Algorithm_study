논리와 증명 8~12 번 과목평가에서 나옴

8번
m = 2k
n = 2k + 1
2m + 3n = 10k + 3이고 2(5k+1) + 1이므로 무조건 홀수가 된다

9번
n = 2k + 1이면 n^2 + 5 = (2k+1)^2 +5 = 4k^2+4k+6이다.
이는 2(2k^2 + 2k + 3) 이므로 항상 짝수이며 대우가 참이므로 n은 짝수이다.

10번
대우 : n이 홀수이면 n^2은 홀수이다.
n = 2k + 1
n^2 = 4k^2 + 4k + 1 = 2(2k^2 + 2k) + 1 이므로 n^2은 항상 홀수이다.
따라서 대우의 성질에 의해 n^2이 짝수이면 n은 짝수이다.

11번
n이 짝수인 경우 n = 2k
n^2 + 5n + 3 = 4k^2 + 10k + 3 = 2(2k^2 + 5k + 1) + 1이므로 항상 홀수

n이 홀수인 경우 n = 2k + 1
4k^2+4k+1 + 10k+5 + 3 = 4k^2 + 14k + 9 = 2(2k^2 + 7k + 4) + 1은 항상 홀수이다.

12번
대우로 증명.
n이 3의 배수가 아니면 n^2은 3의 배수가 아니다.
n을 3으로 나눈 몫이 0이 아닌 경우 -> 3k+1 or 3k+2

3k + 1의 경우 : n^2 = 9k^2 + 6k + 1 -> 3(3k^2+2k) + 1 이므로 3의 배수가 될 수 없다
3k + 2의 경우 : n^2 = 9k^2 + 12k + 4 -> 3(3k^2 + 4k + 1) + 1 이므로 3의 배수가 될 수 없다

따라서 n^2이 3의 배수이면 n은 3의 배수이다

기초 수식 문제 1~5

1번
T(n) = T(n-1) + 1
T(n-1) = T(n-2) + 1 + 1
... T(0) = T(0) + 1
따라서 T(n) = T(0) + k
이때 k = n이므로 O(T(0) + n) = O(1+n) = O(n)

2번
T(n) = T(n-1) + n
T(n-1) = T(n-2) + n-1 + n
... T(0) = T(0) + (1+2+3...+n)
-> 1+(n(n+1)/2)

O(1+(n^2+n/2)) = O(n^2)

3번
T(n) = T(n-1) + logn
T(n-1) = T(n-2) + log(n-1)
... T(0) = T(0) + log(n-k)
T(0) + log0 + log1+log2+...logn <= nlogn 이므로 O(nlogn)

4번
T(n)  = T(n/2) + 1
T(n/2) = T(n/2^2) + 1
... T(n) = T(n/2^k) + k -> T(n) = T(1) + k (2^k = n일때 반복이 끝나므로 k = logn)
O(1+logn) = O(logn)

5번
T(n) = T(n/2) + n
T(n/2) = T(n/2^2) + n/2
... T(n) = T(n/2^k) + 2n (2^k = n에서 종료, 다만 상수가 k가 아니라 n이라 그냥 2n)
O(T(n)) = O(T(1) + 2n) = O(n)


# Django에서 csrf 토큰 사용 안하면 발생하는 오류 - 403에러
# 장고 폼에서 CSRF공격 방지 코드. 폼에서 CSRF 토큰을 추가하는데 사용하는 태그는? Csrf token
# HTTP 메서드 중 하나로 글을 생성 시 주로 사용하는 메서느는 무엇인가(대문자) - POST